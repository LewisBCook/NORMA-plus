Approach - go through bat files to determine the order of building which should be the order of solutions/projects to upgrade
	VS2015.bat
	FirstTimeBuild.bat
	FirstTimeBuildAll.bat

Project Build Order
	** Do not build any project via Visual Studio, instead these must be built via the .bat files
	Tools\NUBuild\NUBuild.sln
	Tools\NUBuildVS\NUBuildVS.sln
	DevTools.proj
		Tools\DisableRuleDirectiveProcessor\DisableRuleDirectiveProcessor.sln
	Main.proj
		ORMPackage.sln
			ORMModel\ORMModel.csproj
		ExtensionExample\ExtensionExample.sln
		OIALModel\OIALModel.sln
		Oial\Oial.sln
		RelationalModel\Dil.sln
		AlternateViews\RelationalView\RelationalView.sln
		CustomProperties\CustomProperties.sln
		EntityRelationship\EntityRelationship.sln
		AlternateViews\BarkerERView\BarkerERView.sln
		Tools\ORMCustomTool\ORMCustomTool.sln
		Tools\DatabaseImport\DatabaseImport.sln
	Setup.proj (BuildSetup calls BuildHelp)
		Setup\Setup.sln
	Tests.proj
		ORMTestPackage.sln
			ORM2CommandLineTest\TestDriverEngine.csproj
			ORM2CommandLineTest\ReportViewer.csproj
			ORM2CommandLineTest\TestDriverApp.csproj
			TestSuites\TestSample\TestSample.csproj
			TestSuites\RegressionTests\ORMRegressionTestAddin\ORMRegressionTestAddin.csproj
			TestSuites\AutomationTestSample\AutomationTestSample.csproj
			TestSuites\RelationalTests\RelationalTests.csproj
		TestSuites\TestSuites.sln
			TestSample\TestSample.csproj
			AutomationTestSample\AutomationTestSample.csproj
			RelationalTests\RelationalTests.csproj

Current Upgrade 2017 -> 2019	
	** TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion

	) New File VS2019.bat (Copy from VS2017.bat)
	) Update VSVer.bat to account for new 2019 version
		- Added section for 2019
		- Set the environment variable TargetVisualStudioMajorMinorVersion, so it can be used in the csproj files
	) New File FirstTimeBuildVS2019.bat (Copy from FirstTimeBuildVS2017.bat and update)
	) Update SetupEnvironment.bat
		- Add section for 2019
	) Edit Tools\NUBuildVS\Neumont.Build.VisualStudio.Multitargeting.targets
		- Add sections for 2019
	) Edit Tools\NUBuildVS\Neumont.Build.VisualStudio.targets
		- Add section for 2019
	) Setup NUBuild for 2019 (Tools\NUBuild)
		- Created NUBuild.VS2019.sln
		- No change to AssemblyInfo, we're still on version 15.1.0.0 of MSBuild
		- No change to NGen.cs - it's already setup for 4.7
		- No change to Intall.bat - we are not using GAC
	) Setup NUBuildVS for 2017 (Tools\NUBuildVS)
		- Created NUBuildVS.VS2019.sln
		- No change to AssemblyInfo, we're still on version 15.1.0.0 of MSBuild
		- Switched NUBuildVS.csproj to checking TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion
	) Setup DisableRuleDirectiveProcessor for 2017 (Tools\DisableRuleDirectiveProcessor)	
		- Created DisableRuleDirectiveProcessor.VS2019.sln
		- Switched DisableRuleDirectiveProcessor.csproj to checking TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion
	) New File BuildDevToolsVS2019.bat (Copy from BuildDevToolsVS2017.bat and update)
	) Setup ORMPackage for 2017	
		- Created ORMPackage.VS2019.sln
		- Switched ORMModel\ORMModel.csproj to checking TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion
		- Update ORMModel\Shell\ORMPackage.cs for 2019
			- Added registry settings for registry settings line 120
		- Create new templates under Shell\ProjectItems VS2017 -> VS2019
	) Setup ExtensionExample for 2019
		- Created ExtensionExample.VS2019.sln
	) Setup OIALModel for 2019
		- Created OIALModel.VS2019.sln
	) Setup Oial for 2019
		- Created Oial.VS2019.sln
	) Setup RelationalModel (Dil.sln) for 2019
		- Created Dil.VS2019.sln
	) Setup RelationalView for 2019 (AlternateViews\RelationalView)
		- Created RelationalView.VS2019.sln
	) Setup CustomProperties for 2019
		- Created CustomProperties.VS2019.sln
	) Setup EntityRelationship for 2019
		- Created EntityRelationship.VS2019.sln
	) Setup BarkerERView for 2019 (AlternateViews\BarkerERView)
		- Created BarkerERView.VS2019.sln
	) Setup ORMCustomTool for 2019 (Tools\ORMCustomTool)
		- Created ORMCustomTool.VS2019.sln
		- Switched ORMCustomTool.csproj to checking TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion
		- Update ORMCustomTool.cs  for 2019
			- Added registry settings for registry settings line 63
		- Update UI\ORMCustomToolUITypeEditor.cs for 2019
			- Added moniker line 69
	) Setup DatabaseImport for 2019 (Tools\DatabaseImport)
		- Created DatabaseImport.VS2019.sln
		- Switched DatabaseImport.csproj to checking TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion
		- Create new templates under ProjectItems VS2017 -> VS2019
	) Create VSIXInstall VS2019 files (Copy from VSIXInstall\VS2017)
		- Update versions in extension.vsixmanifest
		- Update versions in ORMDesigner.pkgdef for the dll references
	) Update .\install.bat use TargetVisualStudioMajorMinorVersion instead of TargetVisualStudioVersion
	) New File BuildVS2019.bat (Copy from BuildVS2017.bat and update)
		
	) Setup Setup for 2017
		- Open the Setup.VS2015.sln and save it as Setup.VS2017.sln
		- Create new NORMASchemaCatalog.VS2017.xml (from the VS2015 version)
		- Added the LICENSE.txt to the Components.wxs file so that the VSIX manifest can find it
	) Update BuildSetup.bat
		- Changed to not call BuildHelp if VS2017 (HelpStudio Lite is no longer installed with VS SDK)
		- Updated to if we used VSWhere to find info then we also need to pass in the private assembly location
	) Update Setup Project
		- ComponentGroups.wxs - separated into two separate files since the 2017 install is very different
			ComponentGroupsPreV15.wxi
			ComponentGroupsV15+.wxi
		- Components.wxs - separated into two separate files since the 2017 install is very different
			ComponentsPreV15.wxi
			ComponentsV15+.wxi
		- NORMAItemTemplates.wxi - separated into two separate files since the 2017 install is very different
			NORMAItemTemplatesPreV15.wxi
			NORMAItemTemplatesV15+.wxi
		- Config.wxi - setup for VS2017
		- Features.wxs - comment out help section
		- Strings.wxl - setup for VS2017
		- UI.wxs - setup for VS2017 (added custom actions to UI Sequence)
		- Product.wxs
			- Changed how to find the information about VS for 2017
			- Ignore Visual Studio registry calls since none of this is in the registry anymore (moved to the pkgdef file)
	) Added a new project Setup.CustomActions
		- This project is used to determine the install locations of VS
	) Updated the Setup.proj file to include the Setup.CustomActions project if VS Version 15.0
	) New File BuildSetupVS2017.bat (Copy from BuildSetupVS2015.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
		- Added ReferencePath for MSBuild to the VS Private Assemblies folder (%VSInstallDir%\Common7\IDE\PrivateAssemblies); this is needed for the virtual tree grid
		- Running this .bat will build Main.proj and Setup.prog
	) Update "ORM2CommandLineTest\TestDriverEngine.csproj"
		- Updated the references for VS2017 and xmldiffpatch
	) Update "ORM2CommandLineTest\ReportViewer.csproj"
		- Updated the references for VS2017 and xmldiffpatch
	) Update "ORM2CommandLineTest\TestDriverApp.csproj"
		- Updated the references for VS2017 and xmldiffpatch
	) Update "TestSuites\TestSample\TestSample.csproj"
		- Updated the references for VS2017
	) Update TestSuites\AutomationTestSample\AutomationTestSample.csproj
		- Updated the references for VS2017
	) Update "TestSuites\RegressionTests\ORMRegressionTestAddin\ORMRegressionTestAddin.csproj"
		- Updated the references for VS2017
	) Update "TestSuites\RelationalTests\RelationalTests.csproj"
		- Updated the references for VS2017
	) New File BuildTestsVS2017.bat (Copy from BuildTestVS2008.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
	) New File BuildAllVS2017.bat (Copy from BuildAllVS2015.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
	
	* New File VersionGenerator.VS2017.sln copied from VersionGenerator.VS2015.sln
	
	
	IF "%TargetVisualStudioVersion%"=="v8.0" (
	SET DegradeToolsVersion=/toolsversion:2.0
) ELSE IF "%TargetVisualStudioVersion%"=="v9.0" (
	SET DegradeToolsVersion=/toolsversion:3.5
) ELSE IF "%TargetVisualStudioVersion%"=="v10.0" (
	SET DegradeToolsVersion=/toolsversion:4.0
) ELSE IF "%TargetVisualStudioVersion%"=="v11.0" (
	SET DegradeToolsVersion=/toolsversion:4.0
) ELSE IF "%TargetVisualStudioVersion%"=="v12.0" (
	SET DegradeToolsVersion=/toolsversion:12.0
) ELSE IF "%TargetVisualStudioVersion%"=="v14.0" (
	SET DegradeToolsVersion=/toolsversion:14.0
) ELSE IF "%TargetVisualStudioVersion%"=="v15.0" (
	SET DegradeToolsVersion=/toolsversion:15.0
) ELSE (
	SET TargetVisualStudioVersion=v16.0
	SET TargetVisualStudioMajorMinorVersion=16.0
	SET DegradeToolsVersion=/toolsversion:Current
)
	
	
			
Upgrade 2015 -> 2017
	1) New File VS2017.bat (Copy from VS2015.bat)
		- Replaced environment variable for call out to VSVer.bat
		- Add  {VS Install Dir}\Common7\IDE\PrivateAssemblies to the path so that Microsoft.VisualStudio.VirtualTreeGrid could be found
	2) Update VSVer.bat to account for new 2017 version
		- Added a section for 2017/v15
	3) New File FirstTimeBuildVS2017.bat (Copy from FirstTimeBuildVS2015.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
	4) Update SetupEnvironment.bat
		- Add section for 2017/v15.0
			* .Net 4.6 is still the base framework for VS 2017 (could use 4.6.2)
		- Changed the information look up for VS2017 to use vswhere
		- Added a new variable for MSBuildBinPath - this is needed to local MSBuild since later versions of the dll are no longer in the GAC
	5) Edit Tools\NUBuildVS\Neumont.Build.VisualStudio.Multitargeting.targets
		- Setup for version 15
	6) Edit Tools\NUBuildVS\Neumont.Build.VisualStudio.targets
		- Setup for version 15
		- Added ;$(VsSDKToolsDir) to the AddtionalIncludeDirectories for VSCTCompiler
	7) Setup NUBuild for 2017 (Tools\NUBuild)
		- Open the NUBuild.VS2015.sln and save it as NUBuild.VS2017.sln
		- AssemblyInfo - Add section for tools version 15
		- Updated NGen.cs to include frameworks 4.5, 4.6, and 4.7
		- Updated Install.bat - added a section to install the MSBuild dlls into the GAC if they are not there; this is needed for ngen.exe
		- ** Do not build this project directly... instead use BuildDevToolsVS{Version}.bat
	8) Setup NUBuildVS for 2017 (Tools\NUBuildVS)
		- Open the NUBuildVS.VS2015.sln and save it as NUBuildVS.VS2017.sln
		- AssemblyInfo - Add section for tools version 15
		- VsSDKLocator.cs
			* Add a section for checking vswhere if the install dir is not found in registry (VS2017+ uses vswhere.exe instead of registry for the installation)
	9) Added a place to download nuget files... can't use the normal nuget install due to the way the project files are setup...
		- .\Nuget
		- You'll need nuget.exe to download and unpack the packages (https://www.nuget.org/downloads)
	10) Setup DisableRuleDirectiveProcessor for 2017 (Tools\DisableRuleDirectiveProcessor)
		- Open the DisableRuleDirectiveProcessor.VS2015.sln and save it as DisableRuleDirectiveProcessor.VS2017.sln
		- Update DisableRuleDirectiveProcessor.csproj to include tools version 15.0
		- Download https://www.nuget.org/packages/Microsoft.VisualStudio.TextTemplating.15.0/ and put in Nuget folder
			nuget install Microsoft.VisualStudio.TextTemplating.15.0 -Version 15.6.27413 -OutputDirectory "{PathToProject}\NORMA-plus\Nuget\"
		- Add new nuget packages to GAC including dependencies
			gacutil -i "{PathToProject}\NORMA-plus\Nuget\Microsoft.VisualStudio.TextTemplating.Interfaces.10.0.10.0.30320\lib\net40\Microsoft.VisualStudio.TextTemplating.Interfaces.10.0.dll"
			gacutil -i "{PathToProject}\NORMA-plus\Nuget\Microsoft.VisualStudio.TextTemplating.Interfaces.11.0.11.0.50728\lib\net45\Microsoft.VisualStudio.TextTemplating.Interfaces.11.0.dll"
			gacutil -i "{PathToProject}\NORMA-plus\Nuget\Microsoft.VisualStudio.TextTemplating.15.0.15.6.27413\lib\net45\Microsoft.VisualStudio.TextTemplating.15.0.dll"
	11) New File BuildDevToolsVS2017.bat (Copy from BuildDevToolsVS2015.bat)	
		- Added section for degrading tools for v14.0 and defaulting to v15.0
		- Running this .bat will build NUBuild, NUBuildVS, and DisableRuleDirectiveProcessor
	12) Setup ORMPackage for 2017
		- Open the ORMPackage.VS2015.sln and save it as ORMPackage.VS2017.sln
		- Update ORMModel\ORMModel.csproj file for version 15.0
		- Update ORMModel\Shell\ORMPackage.cs for 2017
			- Added registry settings for registry settings line 117
		- Add reference to Microsoft.VisualStudio.Shell.Framework if v15
		- Add reference to Microsoft.VisualStudio.Shell.Interop.15.3.DesignTime if v15, to fix compile error - https://developercommunity.visualstudio.com/content/problem/75434/cannot-find-the-interop-type-that-matches-the-embe.html
	13) Setup ExtensionExample for 2017
		- Open the ExtensionExample.VS2015.sln and save it as ExtensionExample.VS2017.sln
	14) Setup OIALModel for 2017
		- Open the OIALModel.VS2015.sln and save it as OIALModel.VS2017.sln
	15) Setup Oial for 2017
		- Open the Oial.VS2015.sln and save it as Oial.VS2017.sln
	16) Setup RelationalModel (Dil.sln) for 2017
		- Open the Dil.VS2015.sln and save it as Dil.VS2017.sln
	17) Setup RelationalView for 2017 (AlternateViews\RelationalView)
		- Open the RelationalView.VS2015.sln and save it as RelationalView.VS2017.sln
	18) Setup CustomProperties for 2017
		- Open the CustomProperties.VS2015.sln and save it as CustomProperties.VS2017.sln
	19) Setup EntityRelationship for 2017
		- Open the EntityRelationship.VS2015.sln and save it as EntityRelationship.VS2017.sln
	20) Setup BarkerERView for 2017 (AlternateViews\BarkerERView)
		- Open the BarkerERView.VS2015.sln and save it as BarkerERView.VS2017.sln
		- Update ShapeModel\AttributeElementListCompartment - overrode the CollapsedSize to check for a null HeaderTextField
			- The field is initially null when the property is called against the Compartment object which causes a null reference exception
	21) Setup ORMCustomTool for 2017 (Tools\ORMCustomTool)
		- Open the ORMCustomTool.VS2015.sln and save it as ORMCustomTool.VS2017.sln
		- Update ORMCustomTool.csproj for version 15.0
		- Update ORMCustomTool.cs  for 2017
			- Added registry settings for registry settings line 62
		- Update UI\ORMCustomToolUITypeEditor.cs for 2017
			- Added moniker line 69
	22) Setup DatabaseImport for 2017 (Tools\DatabaseImport)
		- Open the DatabaseImport.VS2015.sln and save it as DatabaseImport.VS2017.sln
		- Update DatabaseImport.csproj for version 15.0
		- Create new templates under ProjectItems VS2015 -> VS2017
	23) Create VSIXInstall VS2017 files (Copy from VSIXInstall\VS2015)
		- extension.vsixmanifest updated to version 3
	24) Update .\install.bat to copy over the LICENSE.txt file so that it can be included in the VSIX package
	25) New File BuildVS2017.bat (Copy from BuildVS2015.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
		- Added ReferencePath for MSBuild to the VS Private Assemblies folder (%VSInstallDir%\Common7\IDE\PrivateAssemblies); this is needed for the virtual tree grid
		- Running this .bat will build Main.proj
	26) Setup Setup for 2017
		- Open the Setup.VS2015.sln and save it as Setup.VS2017.sln
		- Create new NORMASchemaCatalog.VS2017.xml (from the VS2015 version)
		- Added the LICENSE.txt to the Components.wxs file so that the VSIX manifest can find it
	27) Update BuildSetup.bat
		- Changed to not call BuildHelp if VS2017 (HelpStudio Lite is no longer installed with VS SDK)
		- Updated to if we used VSWhere to find info then we also need to pass in the private assembly location
	28) Update Setup Project
		- ComponentGroups.wxs - separated into two separate files since the 2017 install is very different
			ComponentGroupsPreV15.wxi
			ComponentGroupsV15+.wxi
		- Components.wxs - separated into two separate files since the 2017 install is very different
			ComponentsPreV15.wxi
			ComponentsV15+.wxi
		- NORMAItemTemplates.wxi - separated into two separate files since the 2017 install is very different
			NORMAItemTemplatesPreV15.wxi
			NORMAItemTemplatesV15+.wxi
		- Config.wxi - setup for VS2017
		- Features.wxs - comment out help section
		- Strings.wxl - setup for VS2017
		- UI.wxs - setup for VS2017 (added custom actions to UI Sequence)
		- Product.wxs
			- Changed how to find the information about VS for 2017
			- Ignore Visual Studio registry calls since none of this is in the registry anymore (moved to the pkgdef file)
	29) Added a new project Setup.CustomActions
		- This project is used to determine the install locations of VS
	30) Updated the Setup.proj file to include the Setup.CustomActions project if VS Version 15.0
	31) New File BuildSetupVS2017.bat (Copy from BuildSetupVS2015.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
		- Added ReferencePath for MSBuild to the VS Private Assemblies folder (%VSInstallDir%\Common7\IDE\PrivateAssemblies); this is needed for the virtual tree grid
		- Running this .bat will build Main.proj and Setup.prog
	32) Update "ORM2CommandLineTest\TestDriverEngine.csproj"
		- Updated the references for VS2017 and xmldiffpatch
	33) Update "ORM2CommandLineTest\ReportViewer.csproj"
		- Updated the references for VS2017 and xmldiffpatch
	34) Update "ORM2CommandLineTest\TestDriverApp.csproj"
		- Updated the references for VS2017 and xmldiffpatch
	35) Update "TestSuites\TestSample\TestSample.csproj"
		- Updated the references for VS2017
	36) Update TestSuites\AutomationTestSample\AutomationTestSample.csproj
		- Updated the references for VS2017
	37) Update "TestSuites\RegressionTests\ORMRegressionTestAddin\ORMRegressionTestAddin.csproj"
		- Updated the references for VS2017
	38) Update "TestSuites\RelationalTests\RelationalTests.csproj"
		- Updated the references for VS2017
	39) New File BuildTestsVS2017.bat (Copy from BuildTestVS2008.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
	40) New File BuildAllVS2017.bat (Copy from BuildAllVS2015.bat)
		- Added section for degrading tools for v14.0 and defaulting to v15.0
	
	----------------------------------------------------------------------------------
	-- I'm not sure if these changes are necessary, they are all files/projects that were not part of a build bat file
	----------------------------------------------------------------------------------
	* New File VersionGenerator.VS2017.sln copied from VersionGenerator.VS2015.sln
	
	For VSIXInstall - https://docs.microsoft.com/en-us/visualstudio/extensibility/how-to-migrate-extensibility-projects-to-visual-studio-2017
	MS Help Content Manager - 
		https://docs.microsoft.com/en-us/visualstudio/extensibility/internals/microsoft-help-viewer-sdk
		https://docs.microsoft.com/en-us/visualstudio/ide/help-content-manager-overrides
		https://docs.microsoft.com/en-us/visualstudio/ide/command-line-arguments-for-the-help-content-manager
		https://social.msdn.microsoft.com/Forums/vstudio/en-US/6382b738-c22a-4936-ae5e-cad3fe06c3b8/deploy-help-viewer-1x-content-with-vsix-package?forum=vsx
		http://thirdblogfromthesun.com/2011/05/create-a-basic-help-file-for-the-microsoft-help-viewer/
		https://marketplace.visualstudio.com/items?itemName=sergeb.GhostDoc